"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.equipped = exports.isNewArmorBetter = exports.findArmorDestination = exports.findArmorDestinationIndex = exports.findItemById = void 0;
const armor_1 = require("../data/armor");
const rambda_1 = require("rambda");
const types = rambda_1.keys(armor_1.TypeDestination);
exports.findItemById = (inventory, itemId) => inventory.slots.find((item) => item && item.type === itemId);
exports.findArmorDestinationIndex = (item) => types.findIndex((type) => item.name.endsWith(type));
exports.findArmorDestination = (item) => {
    const type = types.find((type) => item.name.endsWith(type));
    return type && armor_1.TypeDestination[type];
};
exports.isNewArmorBetter = (oldArmor, newArmor) => {
    var oldArmorRank = armor_1.materials.findIndex((material) => oldArmor.name.startsWith(material));
    var newArmorRank = armor_1.materials.findIndex((material) => newArmor.name.startsWith(material));
    return newArmorRank > oldArmorRank;
};
/**
 * Get equipped items(workaround because of https://github.com/PrismarineJS/mineflayer/issues/397)
 */
exports.equipped = (inventory) => inventory.slots.slice(5, 9);
